{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNw9vXQsRp6Gn183vTQ8MNb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uIlvdBdxLyiV","executionInfo":{"status":"ok","timestamp":1747619377095,"user_tz":-330,"elapsed":619,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"c9d6be99-64c4-4449-b7f9-b99e339cc636"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"]}],"source":["from keras.models import load_model\n","model = load_model('/content/tulips-classifer.h5')"]},{"cell_type":"code","source":["from keras.preprocessing import image"],"metadata":{"id":"lYFzKM8OO4iQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["img = image.load_img('/content/tuuu3.jpg',target_size = (64,64))"],"metadata":{"id":"svXbo2qYPTrf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras.preprocessing.image import  img_to_array\n","import numpy as np"],"metadata":{"id":"g570Hp2LQWeI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","ig=ImageDataGenerator(rescale = 1/2.55)\n","img_array = img_to_array(img)\n","img_array = np.expand_dims(img_array,axis = 0)\n","newimg = ig.flow(img_array)"],"metadata":{"id":"HK7huWDfQntB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pred = model.predict(newimg)\n","print(\"tulip\" if pred[0][0]>0.5 else \"lilles\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rMPdNrc3QNGw","executionInfo":{"status":"ok","timestamp":1747626153930,"user_tz":-330,"elapsed":134,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"0c44aea9-a3c6-41f4-f1a7-0998d9605453"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 58ms/step\n","tulip\n"]}]}]}