{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyObXEuKGx+eta8RBKTgrNLD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gj3LZiadx4Mk","executionInfo":{"status":"ok","timestamp":1747692793495,"user_tz":-330,"elapsed":388,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"89fedd6b-4fc4-4296-855a-94897834d769"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"]}],"source":["from keras.models import load_model\n","model = load_model('/content/45-classifer.h5')"]},{"cell_type":"code","source":["from keras.preprocessing import image"],"metadata":{"id":"VLW-XGl0yWbl","executionInfo":{"status":"ok","timestamp":1747692797479,"user_tz":-330,"elapsed":10,"user":{"displayName":"Saloni","userId":"12921202910071408193"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["img = image.load_img('/content/ddd.jpg',target_size = (64,64))"],"metadata":{"id":"1IYQJVAqyMPj","executionInfo":{"status":"ok","timestamp":1747692822846,"user_tz":-330,"elapsed":69,"user":{"displayName":"Saloni","userId":"12921202910071408193"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["from keras.preprocessing.image import  img_to_array\n","import numpy as np"],"metadata":{"id":"b9RvW9Jay4s9","executionInfo":{"status":"ok","timestamp":1747692826462,"user_tz":-330,"elapsed":7,"user":{"displayName":"Saloni","userId":"12921202910071408193"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","ig=ImageDataGenerator(rescale = 1/2.55)\n","img_array = img_to_array(img)\n","img_array = np.expand_dims(img_array,axis = 0)\n","newimg = ig.flow(img_array)"],"metadata":{"id":"cGI0jsIdy4jV","executionInfo":{"status":"ok","timestamp":1747692827665,"user_tz":-330,"elapsed":78,"user":{"displayName":"Saloni","userId":"12921202910071408193"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["pred = model.predict(newimg)\n","print(\"tulip\" )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ipr1o9xwy4YG","executionInfo":{"status":"ok","timestamp":1747692829661,"user_tz":-330,"elapsed":330,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"fe064c72-7208-4586-aefb-10ede784ec56"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 252ms/step\n","tulip\n"]}]},{"cell_type":"code","source":["pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a12DHYJL4M38","executionInfo":{"status":"ok","timestamp":1747692831128,"user_tz":-330,"elapsed":50,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"6539c0ab-8575-4bd1-93c7-e9c0d35a72ec"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0., 0.]], dtype=float32)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["list(pred[0]).index(max(pred[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lcodnR934MuU","executionInfo":{"status":"ok","timestamp":1747692832951,"user_tz":-330,"elapsed":14,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"eb32bd6c-4ec4-4637-efa0-658e416fc4c5"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["pred = model.predict(newimg)\n","print(\"tulip\" if pred[0][0]>0.5 else \"lilles\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xiu8XJJJ5kiM","executionInfo":{"status":"ok","timestamp":1747692835401,"user_tz":-330,"elapsed":107,"user":{"displayName":"Saloni","userId":"12921202910071408193"}},"outputId":"0e7fedef-bccc-40e6-9b4d-217d8bc16285"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 43ms/step\n","tulip\n"]}]}]}